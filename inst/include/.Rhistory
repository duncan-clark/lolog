library(statnet)
#This script simulates from an LOLOG with random nodal covariates:
library(statnet)
library(lolog)
help("add.vertices")
data('lazega')
#Working example : Lazega's Lawyers
data('lazega')
#need to add nodes sequentially, when adding a node simulate its covariates through MCMC procedure
#make network with two unconnected nodes:
net <- network(as.matrix(0,0))
net
plot(net)
#need to add nodes sequentially, when adding a node simulate its covariates through MCMC procedure
#make network with two unconnected nodes:
net <- network(as.matrix(0))
plot(net)
nt
net
network.vertex.names()
network.vertex.names(net)
args(lolog_change_stats)
library(Blolog2)
args(lolog_change_stats)
s
formula_rhs
ent_tmp
net
net_tmp
net = lazega
network::delete.vertices(net, 2:get.network.attribute(net,'n'))
net
plot(net)
list.vertex.attributes(net)
X = lapply(list.vertex.attributes(net),function(name){get.vertex.attribute(net,name)})
X
net_j <- net_j
net_j <- net
net_tmp = add.vertices(net_j,1,vattr = as.list(X))
net_tmp
add.vertices.network()
add.vertices
help("add.vertices")
X
net_tmp = add.vertices(net_j,1,vattr = unlist(X))
unlist(X)
net_tmp = add.vertices(net_j,1,vattr = list(unlist(X)))
list(unlist(X)
)
net_tmp = add.vertices(net_j,1,vattr = list(unlist(X)))
net_tmp = add.vertices(net_j,1)
net_j
get.vertex.attribute(net_j,1)
get.vertex.attribute(net_j,2)
get.vertex.attribute(net_j,1,'age')
get.vertex.attribute(net_j,2,'age')
get.vertex.attribute(net,'name')
get.vertex.attribute(net,'age')
get.vertex.attribute(net_j,'age')
net_tmp = add.vertices(net_j,1,vattr = list(unlist(X)))
debug(add.vertices)
net_tmp = add.vertices(net_j,1,vattr = list(unlist(X)))
xn
vattr
vattr
debug(add.vertices)
net_tmp = add.vertices(net_j,1,vattr = list(unlist(X)))
debug(add.vertices)
net_tmp = add.vertices(net_j,1,vattr = list(unlist(X)))
x
nv
vatrr
vattr
x
.Call(addVertices_R, x, nv, vattr)
vatrr
vattr
nv
x
vattr
vattr[[1]] <- as.list(vattr[[1]])
vattr
.Call(addVertices_R, x, nv, vattr)
net_tmp = add.vertices(net_j,1,vattr = list(unlist(X)[1:2]))
undebug(add.vertices)
net_tmp = add.vertices(net_j,1,vattr = list(unlist(X)[1:2]))
net_tmp = add.vertices(net_j,1,vattr = list(unlist(X)[1]))
add.vertices(net_j,1,vattr = list(1))
add.vertices(net_j,1,vattr = list("Hello")))
add.vertices(net_j,1,vattr = list("Hello"))
x
X
network::add.vertices(lazega,1,X)
network::add.vertices(lazega,1,list(X))
X
network::add.vertices(lazega,1,unlist(X))
unlist(X)
unlist(X)lazega
lazega
add.vertices(net_j,1,vattr = list(unlist(X)[1]))
list(unlist(X
)
)
add.vertices(net_j,1,vattr = list(unlist(X)))
Rcpp::sourceCpp('~/Academics/UCLA_Academics/Networks/lolog/src/RcppModule.cpp')
Rcpp::sourceCpp('~/Academics/UCLA_Academics/Networks/lolog/src/RcppModule.cpp')
Rcpp::sourceCpp('~/Academics/UCLA_Academics/Networks/lolog/src/RcppModule.cpp')
Rcpp::sourceCpp('~/Academics/UCLA_Academics/Networks/lolog/src/RcppModule.cpp')
